
FWL v1.0

Input file: ./examples/1000.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.417565
Compute Speed: 4.789672 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/1000.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.219541
Compute Speed: 9.109913 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/1000.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.133293
Compute Speed: 15.004522 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/1000.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.077173
Compute Speed: 25.915801 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/1000.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.185051
Compute Speed: 10.807833 GIOPS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------

FWL v1.0

Input file: ./examples/2000.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 3.133717
Compute Speed: 5.105758 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/2000.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 1.650217
Compute Speed: 9.695696 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/2000.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.865855
Compute Speed: 18.478845 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/2000.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.581205
Compute Speed: 27.529007 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/2000.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.735284
Compute Speed: 21.760297 GIOPS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------

FWL v1.0

Input file: ./examples/4000.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 23.653881
Compute Speed: 5.411374 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/4000.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 12.551463
Compute Speed: 10.198014 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/4000.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 6.632354
Compute Speed: 19.299332 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/4000.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 4.196663
Compute Speed: 30.500424 GIOPS
----------------------------------------

FWL v1.0

Input file: ./examples/4000.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: INT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 4.471966
Compute Speed: 28.622759 GIOPS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------

FWL v1.0

Input file: ./examples/1000f.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.179142
Compute Speed: 11.164328 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/1000f.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.109401
Compute Speed: 18.281371 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/1000f.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.049619
Compute Speed: 40.307173 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/1000f.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.051417
Compute Speed: 38.897556 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/1000f.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 1000
-> Matrix Normalized Size: 1024
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.143359
Compute Speed: 13.950972 GFLPOS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------

FWL v1.0

Input file: ./examples/2000f.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 1.237444
Compute Speed: 12.929879 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/2000f.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.654106
Compute Speed: 24.460871 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/2000f.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.343151
Compute Speed: 46.626691 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/2000f.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.237559
Compute Speed: 67.351734 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/2000f.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 2000
-> Matrix Normalized Size: 2048
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 0.419005
Compute Speed: 38.185709 GFLPOS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------

FWL v1.0

Input file: ./examples/4000f.csv

Execution mode: 
=> 1 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 8.060555
Compute Speed: 15.879800 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/4000f.csv

Execution mode: 
=> 2 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 4.352767
Compute Speed: 29.406582 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/4000f.csv

Execution mode: 
=> 4 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 2.386644
Compute Speed: 53.631791 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/4000f.csv

Execution mode: 
=> 8 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 1.615913
Compute Speed: 79.212190 GFLPOS
----------------------------------------

FWL v1.0

Input file: ./examples/4000f.csv

Execution mode: 
=> 16 threads
=> Including paths
=> Infinite outputs as INF

Loading Graph ...
-> File format: CSV
-> Datatype: FLOAT
-> Matrix Size: 4000
-> Matrix Normalized Size: 4096
-> Block Size: 128
-> Decimal Places: 4
Done

Computing FW Algorithm ...
Done

Saving Results ...
Done

Compute Time: 1.797114
Compute Speed: 71.225304 GFLPOS
----------------------------------------
----------------------------------------
----------------------------------------
----------------------------------------
